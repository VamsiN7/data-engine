spring.application.name=demo

# Server configuration
server.port=8080

# Redis configuration
spring.data.redis.host=localhost
spring.data.redis.port=6379

# Google OAuth2 configuration
google.client-id=764974271565-ahv5dp56sfuegt63ddpe96vkkqifq1l5.apps.googleusercontent.com
google.issuer=https://accounts.google.com

# Rate limiting configuration
rate.limit.window=60
rate.limit.max-requests=100

# CORS configuration
spring.web.cors.allowed-origins=http://localhost:3000
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,PATCH
spring.web.cors.allowed-headers=Authorization,Content-Type,If-Match,If-None-Match
spring.web.cors.exposed-headers=ETag
spring.web.cors.allow-credentials=true

# Logging configuration
logging.level.org.springframework.security=DEBUG
logging.level.com.example.demo=DEBUG

# Elasticsearch configuration
# elasticsearch.host=localhost
# elasticsearch.port=9200
# elasticsearch.index.name=plans
# elasticsearch.index.type=plan

# Elasticsearch configuration
spring.elasticsearch.uris=http://localhost:9200
spring.elasticsearch.connection-timeout=1s
spring.elasticsearch.socket-timeout=1m
spring.elasticsearch.restclient.sniffer.interval=1m
spring.elasticsearch.restclient.sniffer.delay-after-failure=1m

# RabbitMQ Configuration
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

# Queue Configuration
rabbitmq.queue.plan=plan.queue
rabbitmq.exchange.plan=plan.exchange
rabbitmq.routing.plan=plan.routing

# Retry Configuration
spring.rabbitmq.listener.simple.retry.enabled=true
spring.rabbitmq.listener.simple.retry.initial-interval=1000
spring.rabbitmq.listener.simple.retry.max-attempts=3
spring.rabbitmq.listener.simple.retry.max-interval=10000
spring.rabbitmq.listener.simple.retry.multiplier=2.0

# Dead Letter Configuration
spring.rabbitmq.listener.simple.default-requeue-rejected=false
spring.rabbitmq.listener.simple.acknowledge-mode=auto
